{"remainingRequest":"/home/thiago/www/Pessoais/vueTest/node_modules/babel-loader/lib/index.js!/home/thiago/www/Pessoais/vueTest/node_modules/vuetify/lib/components/VSlideGroup/VSlideGroup.js","dependencies":[{"path":"/home/thiago/www/Pessoais/vueTest/node_modules/vuetify/lib/components/VSlideGroup/VSlideGroup.js","mtime":499162500000},{"path":"/home/thiago/www/Pessoais/vueTest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/thiago/www/Pessoais/vueTest/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/thiago/www/Pessoais/vueTest/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VSlideGroup/VSlideGroup.sass\"; // Components\n\nimport VIcon from \"../VIcon\";\nimport { VFadeTransition } from \"../transitions\"; // Extensions\n\nimport { BaseItemGroup } from \"../VItemGroup/VItemGroup\"; // Mixins\n\nimport Mobile from \"../../mixins/mobile\"; // Directives\n\nimport Resize from \"../../directives/resize\";\nimport Touch from \"../../directives/touch\"; // Utilities\n\nimport mixins from \"../../util/mixins\";\nexport var BaseSlideGroup = mixins(BaseItemGroup, Mobile).extend({\n  name: 'base-slide-group',\n  directives: {\n    Resize: Resize,\n    Touch: Touch\n  },\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active'\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next'\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev'\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: function validator(v) {\n        return typeof v === 'boolean' || ['always', 'desktop', 'mobile'].includes(v);\n      }\n    }\n  },\n  data: function data() {\n    return {\n      internalItemsLength: 0,\n      isOverflowing: false,\n      resizeTimeout: 0,\n      startX: 0,\n      isSwipingHorizontal: false,\n      isSwiping: false,\n      scrollOffset: 0,\n      widths: {\n        content: 0,\n        wrapper: 0\n      }\n    };\n  },\n  computed: {\n    canTouch: function canTouch() {\n      return typeof window !== 'undefined';\n    },\n    __cachedNext: function __cachedNext() {\n      return this.genTransition('next');\n    },\n    __cachedPrev: function __cachedPrev() {\n      return this.genTransition('prev');\n    },\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, BaseItemGroup.options.computed.classes.call(this)), {}, {\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing\n      });\n    },\n    hasAffixes: function hasAffixes() {\n      switch (this.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always':\n          return true;\n        // Always show arrows on desktop\n\n        case 'desktop':\n          return !this.isMobile;\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n\n        case true:\n          return this.isOverflowing || Math.abs(this.scrollOffset) > 0;\n        // Always show on mobile\n\n        case 'mobile':\n          return this.isMobile || this.isOverflowing || Math.abs(this.scrollOffset) > 0;\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n\n        default:\n          return !this.isMobile && (this.isOverflowing || Math.abs(this.scrollOffset) > 0);\n      }\n    },\n    hasNext: function hasNext() {\n      if (!this.hasAffixes) return false;\n      var _this$widths = this.widths,\n          content = _this$widths.content,\n          wrapper = _this$widths.wrapper; // Check one scroll ahead to know the width of right-most item\n\n      return content > Math.abs(this.scrollOffset) + wrapper;\n    },\n    hasPrev: function hasPrev() {\n      return this.hasAffixes && this.scrollOffset !== 0;\n    }\n  },\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset: function scrollOffset(val) {\n      this.$refs.content.style.transform = \"translateX(\".concat(-val, \"px)\");\n    }\n  },\n  beforeUpdate: function beforeUpdate() {\n    this.internalItemsLength = (this.$children || []).length;\n  },\n  updated: function updated() {\n    if (this.internalItemsLength === (this.$children || []).length) return;\n    this.setWidths();\n  },\n  methods: {\n    // Always generate next for scrollable hint\n    genNext: function genNext() {\n      var _this = this;\n\n      var slot = this.$scopedSlots.next ? this.$scopedSlots.next({}) : this.$slots.next || this.__cachedNext;\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext\n        },\n        on: {\n          click: function click() {\n            return _this.onAffixClick('next');\n          }\n        },\n        key: 'next'\n      }, [slot]);\n    },\n    genContent: function genContent() {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content'\n      }, this.$slots.default);\n    },\n    genData: function genData() {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize\n        }]\n      };\n    },\n    genIcon: function genIcon(location) {\n      var icon = location;\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next';\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev';\n      }\n\n      var upperLocation = \"\".concat(location[0].toUpperCase()).concat(location.slice(1));\n      var hasAffix = this[\"has\".concat(upperLocation)];\n      if (!this.showArrows && !hasAffix) return null;\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix\n        }\n      }, this[\"\".concat(icon, \"Icon\")]);\n    },\n    // Always generate prev for scrollable hint\n    genPrev: function genPrev() {\n      var _this2 = this;\n\n      var slot = this.$scopedSlots.prev ? this.$scopedSlots.prev({}) : this.$slots.prev || this.__cachedPrev;\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev\n        },\n        on: {\n          click: function click() {\n            return _this2.onAffixClick('prev');\n          }\n        },\n        key: 'prev'\n      }, [slot]);\n    },\n    genTransition: function genTransition(location) {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)]);\n    },\n    genWrapper: function genWrapper() {\n      var _this3 = this;\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: function start(e) {\n              return _this3.overflowCheck(e, _this3.onTouchStart);\n            },\n            move: function move(e) {\n              return _this3.overflowCheck(e, _this3.onTouchMove);\n            },\n            end: function end(e) {\n              return _this3.overflowCheck(e, _this3.onTouchEnd);\n            }\n          }\n        }],\n        ref: 'wrapper'\n      }, [this.genContent()]);\n    },\n    calculateNewOffset: function calculateNewOffset(direction, widths, rtl, currentScrollOffset) {\n      var sign = rtl ? -1 : 1;\n      var newAbosluteOffset = sign * currentScrollOffset + (direction === 'prev' ? -1 : 1) * widths.wrapper;\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0);\n    },\n    onAffixClick: function onAffixClick(location) {\n      this.$emit(\"click:\".concat(location));\n      this.scrollTo(location);\n    },\n    onResize: function onResize() {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return;\n      this.setWidths();\n    },\n    onTouchStart: function onTouchStart(e) {\n      var content = this.$refs.content;\n      this.startX = this.scrollOffset + e.touchstartX;\n      content.style.setProperty('transition', 'none');\n      content.style.setProperty('willChange', 'transform');\n    },\n    onTouchMove: function onTouchMove(e) {\n      if (!this.canTouch) return;\n\n      if (!this.isSwiping) {\n        // only calculate disableSwipeHorizontal during the first onTouchMove invoke\n        // in order to ensure disableSwipeHorizontal value is consistent between onTouchStart and onTouchEnd\n        var diffX = e.touchmoveX - e.touchstartX;\n        var diffY = e.touchmoveY - e.touchstartY;\n        this.isSwipingHorizontal = Math.abs(diffX) > Math.abs(diffY);\n        this.isSwiping = true;\n      }\n\n      if (this.isSwipingHorizontal) {\n        // sliding horizontally\n        this.scrollOffset = this.startX - e.touchmoveX; // temporarily disable window vertical scrolling\n\n        document.documentElement.style.overflowY = 'hidden';\n      }\n    },\n    onTouchEnd: function onTouchEnd() {\n      if (!this.canTouch) return;\n      var _this$$refs = this.$refs,\n          content = _this$$refs.content,\n          wrapper = _this$$refs.wrapper;\n      var maxScrollOffset = content.clientWidth - wrapper.clientWidth;\n      content.style.setProperty('transition', null);\n      content.style.setProperty('willChange', null);\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0;\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset;\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0;\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset;\n        }\n      }\n\n      this.isSwiping = false; // rollback whole page scrolling to default\n\n      document.documentElement.style.removeProperty('overflow-y');\n    },\n    overflowCheck: function overflowCheck(e, fn) {\n      e.stopPropagation();\n      this.isOverflowing && fn(e);\n    },\n    scrollIntoView\n    /* istanbul ignore next */\n    : function scrollIntoView() {\n      if (!this.selectedItem && this.items.length) {\n        var lastItemPosition = this.items[this.items.length - 1].$el.getBoundingClientRect();\n        var wrapperPosition = this.$refs.wrapper.getBoundingClientRect();\n\n        if (this.$vuetify.rtl && wrapperPosition.right < lastItemPosition.right || !this.$vuetify.rtl && wrapperPosition.left > lastItemPosition.left) {\n          this.scrollTo('prev');\n        }\n      }\n\n      if (!this.selectedItem) {\n        return;\n      }\n\n      if (this.selectedIndex === 0 || !this.centerActive && !this.isOverflowing) {\n        this.scrollOffset = 0;\n      } else if (this.centerActive) {\n        this.scrollOffset = this.calculateCenteredOffset(this.selectedItem.$el, this.widths, this.$vuetify.rtl);\n      } else if (this.isOverflowing) {\n        this.scrollOffset = this.calculateUpdatedOffset(this.selectedItem.$el, this.widths, this.$vuetify.rtl, this.scrollOffset);\n      }\n    },\n    calculateUpdatedOffset: function calculateUpdatedOffset(selectedElement, widths, rtl, currentScrollOffset) {\n      var clientWidth = selectedElement.clientWidth;\n      var offsetLeft = rtl ? widths.content - selectedElement.offsetLeft - clientWidth : selectedElement.offsetLeft;\n\n      if (rtl) {\n        currentScrollOffset = -currentScrollOffset;\n      }\n\n      var totalWidth = widths.wrapper + currentScrollOffset;\n      var itemOffset = clientWidth + offsetLeft;\n      var additionalOffset = clientWidth * 0.4;\n\n      if (offsetLeft <= currentScrollOffset) {\n        currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0);\n      } else if (totalWidth <= itemOffset) {\n        currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper);\n      }\n\n      return rtl ? -currentScrollOffset : currentScrollOffset;\n    },\n    calculateCenteredOffset: function calculateCenteredOffset(selectedElement, widths, rtl) {\n      var offsetLeft = selectedElement.offsetLeft,\n          clientWidth = selectedElement.clientWidth;\n\n      if (rtl) {\n        var offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2;\n        return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered));\n      } else {\n        var _offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2;\n\n        return Math.min(widths.content - widths.wrapper, Math.max(0, _offsetCentered));\n      }\n    },\n    scrollTo\n    /* istanbul ignore next */\n    : function scrollTo(location) {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0\n      }, this.$vuetify.rtl, this.scrollOffset);\n    },\n    setWidths\n    /* istanbul ignore next */\n    : function setWidths() {\n      var _this4 = this;\n\n      window.requestAnimationFrame(function () {\n        var _this4$$refs = _this4.$refs,\n            content = _this4$$refs.content,\n            wrapper = _this4$$refs.wrapper;\n        _this4.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0\n        }; // https://github.com/vuetifyjs/vuetify/issues/13212\n        // We add +1 to the wrappers width to prevent an issue where the `clientWidth`\n        // gets calculated wrongly by the browser if using a different zoom-level.\n\n        _this4.isOverflowing = _this4.widths.wrapper + 1 < _this4.widths.content;\n\n        _this4.scrollIntoView();\n      });\n    }\n  },\n  render: function render(h) {\n    return h('div', this.genData(), [this.genPrev(), this.genWrapper(), this.genNext()]);\n  }\n});\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n  provide: function provide() {\n    return {\n      slideGroup: this\n    };\n  }\n});",{"version":3,"sources":["../../../src/components/VSlideGroup/VSlideGroup.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Mobile from '../../mixins/mobile'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchstartY: number\n  touchmoveX: number\n  touchmoveY: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof BaseItemGroup,\n    typeof Mobile,\n  ]>\n/* eslint-enable indent */\n>(\n  BaseItemGroup,\n  Mobile,\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: v => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n  },\n\n  data: () => ({\n    internalItemsLength: 0,\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    isSwipingHorizontal: false,\n    isSwiping: false,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    canTouch (): boolean {\n      return typeof window !== 'undefined'\n    },\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      switch (this.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !this.isMobile\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return this.isOverflowing || Math.abs(this.scrollOffset) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          this.isMobile ||\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !this.isMobile &&\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n      }\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      this.$refs.content.style.transform = `translateX(${-val}px)`\n    },\n  },\n\n  beforeUpdate () {\n    this.internalItemsLength = (this.$children || []).length\n  },\n\n  updated () {\n    if (this.internalItemsLength === (this.$children || []).length) return\n    this.setWidths()\n  },\n\n  methods: {\n    // Always generate next for scrollable hint\n    genNext (): VNode | null {\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      if (!this.canTouch) return\n\n      if (!this.isSwiping) {\n        // only calculate disableSwipeHorizontal during the first onTouchMove invoke\n        // in order to ensure disableSwipeHorizontal value is consistent between onTouchStart and onTouchEnd\n        const diffX = e.touchmoveX - e.touchstartX\n        const diffY = e.touchmoveY - e.touchstartY\n        this.isSwipingHorizontal = Math.abs(diffX) > Math.abs(diffY)\n        this.isSwiping = true\n      }\n\n      if (this.isSwipingHorizontal) {\n        // sliding horizontally\n        this.scrollOffset = this.startX - e.touchmoveX\n        // temporarily disable window vertical scrolling\n        document.documentElement.style.overflowY = 'hidden'\n      }\n    },\n    onTouchEnd () {\n      if (!this.canTouch) return\n\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n\n      this.isSwiping = false\n      // rollback whole page scrolling to default\n      document.documentElement.style.removeProperty('overflow-y')\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem && this.items.length) {\n        const lastItemPosition = this.items[this.items.length - 1].$el.getBoundingClientRect()\n        const wrapperPosition = this.$refs.wrapper.getBoundingClientRect()\n\n        if (\n          (this.$vuetify.rtl && wrapperPosition.right < lastItemPosition.right) ||\n          (!this.$vuetify.rtl && wrapperPosition.left > lastItemPosition.left)\n        ) {\n          this.scrollTo('prev')\n        }\n      }\n\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = this.calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = this.calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    calculateUpdatedOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean, currentScrollOffset: number): number {\n      const clientWidth = selectedElement.clientWidth\n      const offsetLeft = rtl\n        ? (widths.content - selectedElement.offsetLeft - clientWidth)\n        : selectedElement.offsetLeft\n\n      if (rtl) {\n        currentScrollOffset = -currentScrollOffset\n      }\n\n      const totalWidth = widths.wrapper + currentScrollOffset\n      const itemOffset = clientWidth + offsetLeft\n      const additionalOffset = clientWidth * 0.4\n\n      if (offsetLeft <= currentScrollOffset) {\n        currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n      } else if (totalWidth <= itemOffset) {\n        currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n      }\n\n      return rtl ? -currentScrollOffset : currentScrollOffset\n    },\n    calculateCenteredOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean): number {\n      const { offsetLeft, clientWidth } = selectedElement\n\n      if (rtl) {\n        const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n        return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      } else {\n        const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n        return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths /* istanbul ignore next */  () {\n      window.requestAnimationFrame(() => {\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        // https://github.com/vuetifyjs/vuetify/issues/13212\n        // We add +1 to the wrappers width to prevent an issue where the `clientWidth`\n        // gets calculated wrongly by the browser if using a different zoom-level.\n        this.isOverflowing = this.widths.wrapper + 1 < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n"],"sourceRoot":""}]}